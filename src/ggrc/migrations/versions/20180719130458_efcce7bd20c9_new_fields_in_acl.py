# Copyright (C) 2018 Google Inc.
# Licensed under http://www.apache.org/licenses/LICENSE-2.0 <see LICENSE file>

"""
new fields in acl

Create Date: 2018-07-19 13:04:58.420766
"""
# disable Invalid constant name pylint warning for mandatory Alembic variables.
# pylint: disable=invalid-name

import sqlalchemy as sa

from alembic import op
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
from ggrc.migrations.utils import acr_propagation

revision = 'efcce7bd20c9'
down_revision = 'd982f2b0f754'


def upgrade():
    """Upgrade database schema and/or data, creating a new revision."""
    # ### commands auto generated by Alembic - please adjust! ###
    connection = op.get_bind()
    parent_acr_q = connection.execute(
      sa.select([
          acr_propagation.ACR_TABLE.c.id
        ]).where(
          acr_propagation.ACR_TABLE.c.internal == 1,
      )
    ).fetchall()
    for row in parent_acr_q:
      op.execute(
        acr_propagation.ACL_TABLE.delete().where(
            acr_propagation.ACL_TABLE.c.ac_role_id == row.id
        )
      )
      acr_propagation.ACR_TABLE.delete().where(
          acr_propagation.ACR_TABLE.c.id == row.id
      )

    op.add_column('access_control_list', sa.Column('delete', sa.Boolean(), nullable=False))
    op.add_column('access_control_list', sa.Column('p_ac_role_id', sa.Integer(), nullable=True))
    op.add_column('access_control_list', sa.Column('parent_bucket_id', sa.Integer(), nullable=True))
    op.add_column('access_control_list', sa.Column('read', sa.Boolean(), nullable=False))
    op.add_column('access_control_list', sa.Column('update', sa.Boolean(), nullable=False))
    op.alter_column('access_control_list', 'ac_role_id',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=True)
    op.create_foreign_key(None, 'access_control_list', 'bucket_items', ['parent_bucket_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'access_control_list', 'propagated_access_control_roles', ['p_ac_role_id'], ['id'])
    # ### end Alembic commands ###

def downgrade():
    """Downgrade database schema and/or data back to the previous revision."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'access_control_list', type_='foreignkey')
    op.drop_constraint(None, 'access_control_list', type_='foreignkey')
    op.alter_column('access_control_list', 'ac_role_id',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=False)
    op.drop_column('access_control_list', 'update')
    op.drop_column('access_control_list', 'read')
    op.drop_column('access_control_list', 'parent_bucket_id')
    op.drop_column('access_control_list', 'p_ac_role_id')
    op.drop_column('access_control_list', 'delete')
    # ### end Alembic commands ###
